.backdrop {
  position: fixed; inset: 0;
  background: rgba(0,0,0,0.06);
  opacity: 0;
  transition: opacity 160ms ease;
  z-index: 40;
  pointer-events: none;
}
.backdrop.open   { opacity: .06; pointer-events: auto; }
.backdrop.closed { opacity: 0;   pointer-events: none; }

.panel {
  position: absolute; right: 0; margin-top: 8px; width: 10rem;
  background: #fff; border-radius: .5rem; box-shadow: 0 10px 20px rgba(0,0,0,.12);
  outline: none; overflow: hidden; z-index: 50;

  transform-origin: top right;
  transition:
    opacity 160ms ease,
    transform 160ms cubic-bezier(.22,.61,.36,1);
  will-change: opacity, transform;
}

.panel.closed {
  opacity: 0;
  transform: scale(.96) translateY(-6px);
  pointer-events: none;
}

.panel.open {
  opacity: 1;
  transform: scale(1) translateY(0);
  pointer-events: auto;
}

/* optional item stagger */
.list { padding: 4px 0; }
.list > * { opacity: 0; transform: translateY(-4px);
  transition: opacity 120ms ease, transform 120ms ease; }
.panel.open .list > * { opacity: 1; transform: translateY(0); }
.list > *:nth-child(1){ transition-delay: 40ms; }
.list > *:nth-child(2){ transition-delay: 70ms; }
.list > *:nth-child(3){ transition-delay: 100ms; }

/* --- Fluid Hamburger -> X --- */
.burger {
  position: absolute;
  left: 50%;
  top: 50%;
  width: 22px;
  height: 2px;
  background: currentColor;
  transform: translate(-50%, -50%);
  pointer-events: none;

  /* springy + squishy transitions */
  transition:
    transform .38s cubic-bezier(.2,.8,.2,1.4),
    width     .38s cubic-bezier(.2,.8,.2,1.4);

  /* subtle “fluid” glow that appears during morph */
  isolation: isolate;
}

/* initial positions */
.top    { transform: translate(-50%, calc(50% - 10px)); }
.middle { transform: translate(-50%, -50%); }
.bottom { transform: translate(-50%, calc(50% + 8px)); }

/* small stagger for extra fluidity */
.top    { transition-delay: 20ms; }
.middle { transition-delay: 0ms; }
.bottom { transition-delay: 40ms; }

/* OPEN STATE -> X */
button[data-open="true"] .top {
  transform: translate(-50%, -50%) rotate(45deg);
  width: 26px;
}
button[data-open="true"] .middle {
  transform: translate(-50%, -50%) scaleX(0.2);
}
button[data-open="true"] .bottom {
  transform: translate(-50%, -50%) rotate(-45deg);
  width: 26px;
}

/* Respect reduced motion */
@media (prefers-reduced-motion: reduce) {
  .burger,
  .burger::after {
    transition: none !important;
  }
}
